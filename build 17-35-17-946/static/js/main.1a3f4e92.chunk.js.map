{"version":3,"sources":["context.js","alldata.js","createaccount.js","deposit.js","home.js","login.js","withdraw.js","navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Route","route","NavLink","navlink","HashRouter","hashrouter","UserContext","React","createContext","Card","props","className","bgcolor","txtcolor","style","maxWidth","header","title","text","body","status","id","color","background","marginTop","Click","onClick","disabled","variant","Money","onChange","placeholder","type","Icon","src","width","alt","AllData","useState","data","setData","ctx","useContext","useEffect","fetch","then","response","json","console","log","currentUser","email","map","user","name","password","balance","CreateAccount","show","setShow","setStatus","setName","setEmail","setPassword","setDisabled","validate","field","label","setTimeout","clearForm","value","e","currentTarget","length","url","a","res","Deposit","setBalance","deposit","setDeposit","isNaN","Number","alert","toFixed","Home","Login","JSON","parse","err","Withdraw","amount","setAmount","NavBar","href","to","App","Provider","users","transactions","padding","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a3f4e92.chunk.js","sourcesContent":["import React from 'react';\nimport { HashRouter as hashrouter, Route as route , NavLink as navlink} from 'react-router-dom';\n\nconst Route       = route;\nconst NavLink     = navlink;\nconst HashRouter  = hashrouter;\nconst UserContext = React.createContext(null);\n\nfunction Card(props){\n    function classes(){\n      const bg  = props.bgcolor ? ' bg-' + props.bgcolor : ' ';\n      const txt = props.txtcolor ? ' text-' + props.txtcolor: ' text-white';\n      return 'card mb-3 ' + bg + txt;\n    }\n  \n    return (\n      <div className={classes()} style={props.style? props.style : {maxWidth: \"18rem\"}}>\n        <div className=\"card-header\">{props.header}</div>\n        <div className=\"card-body\">\n          {props.title && (<h5 className=\"card-title\">{props.title}</h5>)}\n          {props.text && (<p className=\"card-text\">{props.text}</p>)}\n          {props.body}\n          {props.status && (<div id='createStatus' style={{color: 'red', background: 'white', marginTop: '10px'}}>{props.status}</div>)}\n        </div>\n      </div>      \n    );    \n}\n\nfunction Click({onClick, disabled, variant, text, className}) {\n  return (\n    <button\n      className={className}\n      onClick={onClick}\n      disabled={disabled}\n      variant={variant}\n    >{text}</button>\n  )\n}\n\nfunction Money({onChange, placeholder}) {\n  return (\n    <div className=\"input-group mb-3\">\n      <span className=\"input-group-text\">$</span>\n        <input type=\"text\" className=\"form-control\" aria-label=\"Amount (to the nearest dollar)\" onChange={onChange} placeholder={placeholder} />\n      <span className=\"input-group-text\">.00</span>\n    </div>\n  )\n}\n\nfunction Icon() {\n  return (\n    <img src=\"bank-green.svg\" width=\"35px\" className=\"img-fluid\" alt=\"Responsive image\"/>\n  )\n}\n\nexport {Route, NavLink, HashRouter, UserContext, Card, Click, Money, Icon};","import React from 'react';\nimport {UserContext, Card} from './context';\n\n\nfunction AllData(){\n  const [data, setData] = React.useState([]);\n  const ctx = React.useContext(UserContext);    \n\n  React.useEffect(() => {\n        \n      // fetch all accounts from API\n      fetch('/account/all')\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            setData(data);                \n        });\n\n  }, []);\n  \n  return (\n    <Card\n      bgcolor = \"info\"\n      style = {{maxWidth: \"45rem\"}}\n      header = \"All data\"\n      title = {ctx.currentUser? \"Current user: \" + ctx.currentUser.email : \"\"}\n      body = {\n        <table className=\"table\">\n          <tbody>\n            {data.map((user) => \n              <>\n                <h5 className=\"text-white font-weight-bold\">{\"User: \" + user.email}</h5>\n                <tr>\n                  <td className=\"text-white font-weight-bold\">Name:</td>\n                  <td>{user.name}</td>\n                </tr>\n                <tr>\n                  <td className=\"text-white font-weight-bold\">Email:</td>\n                  <td>{user.email}</td>\n                </tr>\n                <tr>\n                  <td className=\"text-white font-weight-bold\">Password:</td>\n                  <td>{user.password}</td>\n                </tr>\n                <tr>\n                  <td className=\"text-white font-weight-bold\">Balance:</td>\n                  <td>{user.balance}</td>\n                </tr>\n                \n              </>\n            )}\n          </tbody>\n        </table>\n      }\n    />\n  );\n}\n\nexport default AllData;\n","import React from \"react\";\nimport {UserContext, Card, Click} from './context'\n\nfunction CreateAccount(){\n  const [show, setShow]         = React.useState(true);\n  const [status, setStatus]     = React.useState('');\n  const [name, setName]         = React.useState('');\n  const [email, setEmail]       = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [disabled, setDisabled] = React.useState(true);\n\n  function validate(field, label){ // this is only checking for an empty field.\n      if (!field) {\n        setStatus('Error: ' + label);\n        setTimeout(() => setStatus(''),3000);\n        return false;\n      }\n      return true;\n  }\n\n  function handleChangeEmail(e) {\n    setEmail(e.currentTarget.value);\n    setDisabled(!e.currentTarget.value);\n  }\n\n  function handleChangeName(e) {\n    setName(e.currentTarget.value);\n    setDisabled(!e.currentTarget.value);\n  }\n\n  function handleChangePassword(e) {\n    setPassword(e.currentTarget.value);\n    setDisabled(!e.currentTarget.value);\n  }\n\n  function handleCreate(){\n    console.log(name,email,password); // troubleshooting purposes\n    if (!validate(name,     'name'))     return;\n    if (!validate(email,    'email'))    return;\n    if (!validate(password, 'password')) return;\n    if (password.length < 8) {\n      validate(false, \"Password must be more than 8 characters\");\n      clearForm();\n      return;\n  }\n  const url = `/account/create/${name}/${email}/${password}`;\n  (async () => {\n      var res  = await fetch(url);\n      var data = await res.json();    \n      console.log(data);        \n  })();\n  \n  setShow(false);\n  }    \n\n  function clearForm(){ // will simply clear all the values\n    setName('');\n    setEmail('');\n    setPassword('');\n    setShow(true);\n    setDisabled(true);\n  }\n\n  return (\n    <Card\n      bgcolor=\"info\"\n      header=\"Create Account\"\n      status={status}\n      body={show ? (  \n              <>\n              Name<br/>\n              <input \n                type=\"input\" \n                className=\"form-control\" \n                id=\"name\" \n                placeholder=\"Enter name\" \n                value={name} \n                onChange={handleChangeName} \n              /><br/>\n              Email address<br/>\n              <input \n                type=\"input\" \n                className=\"form-control\" \n                id=\"email\" \n                placeholder=\"Enter email\" \n                value={email} \n                onChange={handleChangeEmail}\n              /><br/>\n              Password<br/>\n              <input \n                type=\"password\" \n                className=\"form-control\" \n                id=\"password\" \n                placeholder=\"Enter password\" \n                value={password} \n                onChange={handleChangePassword}\n              /><br/>\n              <Click\n                text=\"Create Account\"\n                disabled={disabled}\n                variant=\"primary\"\n                onClick={handleCreate}\n                className=\"btn btn-outline-light\"\n              />\n              </>\n            ):(\n              <>\n              <h5>Success</h5>\n              <button \n                type=\"submit\" \n                className=\"btn btn-light\" \n                onClick={clearForm}>Add another account</button>\n              </>\n            )}\n    />\n  )\n}\n\nexport default CreateAccount;\n","import React from \"react\";\nimport { UserContext, Card, Money, Click } from \"./context\";\n\nfunction Deposit(){\n  const ctx = React.useContext(UserContext);\n  const currentUser =  ctx.currentUser;\n  const [balance, setBalance] = React.useState(currentUser? currentUser.balance : null);\n\n  const [show, setShow]         = React.useState(true);\n  const [status, setStatus]     = React.useState('');\n  const [amount, setAmount] = React.useState('');\n  const [deposit, setDeposit]   = React.useState('');\n  const [disabled, setDisabled] = React.useState(true);\n\n  function validate(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''),3000);\n      return false;\n    }\n    return true;\n}\n\n  function clearForm() {\n    setDeposit('');\n    setDisabled(true);\n    setShow(true);\n  }\n\n  function handleChange(e) {\n    setDeposit(e.currentTarget.value);\n    setDisabled(!e.currentTarget.value);\n  }\n\n  function handleCreate() {\n    console.log(deposit);\n    if (!validate(deposit,     '0'))     return;\n    if (deposit <= 0) {\n      validate(false, \"Invalid deposit amount\");\n      clearForm();\n      return;\n    }\n    if (isNaN(deposit)) {\n      validate(false, \"Value must be a number\");\n      clearForm();\n      return;\n    }\n    if(!validate(deposit)) return;\n    currentUser.balance += Number(deposit);\n    setBalance(currentUser.balance);\n    //currentUser.transactions.push({date: Date(), type: \"deposit\", amount: Number(amount)});\n  \n\n  fetch(`/account/update/${currentUser.email}/${deposit}`)\n  .then(response => console.log(response));\n\nalert('Deposit was received successfully');\nclearForm();\n}\n\n  \n  return (\n    <Card\n      bgcolor=\"info\"\n      header=\"Deposit\"\n      status={status}\n      body={show ? (\n      <>\n          <h3>Balance ${(balance? balance : \"?\")}</h3>\n          <br />\n        Deposit Amount\n        <br />\n        \n        <Money\n          onChange={handleChange}\n          placeholder=\"Enter deposit amount\"             \n        />\n                                   \n        <Click\n           text=\"Submit\"\n           disabled={disabled}\n           variant=\"primary\"\n           onClick={handleCreate}\n           className=\"btn btn-outline-light\"\n          />\n      </>\n):(\n    <>\n      <h3>Balance ${ctx.currentUser.balance.toFixed(2)}</h3>\n      <br />\n      <h6>Your account has been updated!</h6>\n      <Click\n        text=\"Start Another Transaction\"\n        className=\"btn btn-success\"\n        onClick={clearForm}\n      />\n    </>\n\n)}\n/>\n  )\n}\n\nexport default Deposit;\n","import {Card} from './context'\n\nfunction Home(){\n  return (\n    <Card\n      txtcolor=\"black\"\n      header=\"Bad Bank\"\n      title=\"Welcome to the bank\"\n      text=\"Use the navigation bar to move throughout your options.\"\n      body={(<img src=\"bank.png\" className=\"img-fluid\" alt=\"Responsive image\"/>)}\n    />    \n  );  \n}\n\nexport default Home;","import React from \"react\";\nimport {UserContext, Card, Click} from './context'\n\nfunction Login(){\n  const ctx = React.useContext(UserContext);\n  let currentUser =  ctx.currentUser;\n  const [show, setShow]         = React.useState(true);\n  const [status, setStatus]     = React.useState('');\n  const [email, setEmail]       = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [disabled, setDisabled] = React.useState(true);\n\n  function validate(field, label){ // this is only checking for an empty field.\n      if (!field) {\n        setStatus('Error: ' + label);\n        setTimeout(() => setStatus(''),3000);\n        return false;\n      }\n      return true;\n  }\n\n  function handleChangeEmail(e) {\n    setEmail(e.currentTarget.value);\n    setDisabled(!e.currentTarget.value);\n  }\n\n  function handleChangePassword(e) {\n    setPassword(e.currentTarget.value);\n    setDisabled(!e.currentTarget.value);\n  }\n\n  function handleCreate(){\n    console.log(email,password); // troubleshooting purposes\n    if (!validate(email,    'email'))    return;\n    if (!validate(password, 'password')) return;\n    if (password.length < 8) {\n      validate(false, \"Password must be more than 8 characters\");\n      clearForm();\n      return;\n  }\n  fetch(`/account/login/${email}/${password}`)\n    .then(response => response.text())\n    .then(text => {\n        try {\n            const data = JSON.parse(text);\n            console.log('JSON:', data);\n            currentUser = data;\n            ctx.currentUser = currentUser;\n            setShow(false);\n        } catch(err) {\n            alert(text);\n            console.log('err:', text);\n        }\n    });\n  }    \n\n  function clearForm(){ // will simply clear all the values\n    setEmail('');\n    setPassword('');\n    setShow(true);\n    setDisabled(true);\n  }\n\n  return (\n    <Card\n      bgcolor=\"info\"\n      header=\"Login\"\n      status={status}\n      body={show ? (  \n              <>\n             \n              Email address<br/>\n              <input \n                type=\"input\" \n                className=\"form-control\" \n                id=\"email\" \n                placeholder=\"Enter email\" \n                value={email} \n                onChange={handleChangeEmail}\n              /><br/>\n              Password<br/>\n              <input \n                type=\"password\" \n                className=\"form-control\" \n                id=\"password\" \n                placeholder=\"Enter password\" \n                value={password} \n                onChange={handleChangePassword}\n              /><br/>\n              <Click\n                text=\"Login\"\n                disabled={disabled}\n                variant=\"primary\"\n                onClick={handleCreate}\n                className=\"btn btn-outline-light\"\n              />\n              </>\n            ):(\n              <>\n              <h5>Success</h5>\n              <button \n                type=\"submit\" \n                className=\"btn btn-light\" \n                onClick={clearForm}>Add another account</button>\n              </>\n            )}\n    />\n  )\n}\n\nexport default Login;\n","import React from \"react\";\nimport { UserContext, Card, Money, Click } from \"./context\";\n\nfunction Withdraw(){\n  const ctx = React.useContext(UserContext);\n  const currentUser =  ctx.currentUser;\n  const [balance, setBalance] = React.useState(currentUser? currentUser.balance : null);\n\n  const [show, setShow]         = React.useState(true);\n  const [status, setStatus]     = React.useState('');\n  const [amount, setAmount] = React.useState('');\n  const [disabled, setDisabled] = React.useState(true);\n\n  function validate(field, label) {\n    if (!field) {\n      setStatus('Error: ' + label);\n      setTimeout(() => setStatus(''),3000);\n      return false;\n    }\n    return true;\n}\n\n  function clearForm() {\n    setAmount('');\n    setDisabled(true);\n    setShow(true);\n  }\n\n  function handleChange(e) {\n    setAmount(e.currentTarget.value);\n    setDisabled(!e.currentTarget.value);\n  }\n\n  function handleCreate() {\n    console.log(amount);\n    if (!validate(amount,     '0'))     return;\n    if (amount <= 0) {\n      validate(false, \"Invalid Withdraw amount\");\n      clearForm();\n      return;\n    }\n    if (isNaN(amount)) {\n      validate(false, \"Value must be a number\");\n      clearForm();\n      return;\n    }\n    if(!validate(amount)) return;\n    currentUser.balance -= Number(amount);\n    setBalance(currentUser.balance);\n    //currentUser.transactions.push({date: Date(), type: \"withdraw\", amount: Number(amount)});\n  \n\n  fetch(`/account/update/${currentUser.email}/-${amount}`)\n  .then(response => console.log(response));\n\nalert('Withdraw was received successfully');\nclearForm();\n}\n\n  \n  return (\n    <Card\n      bgcolor=\"info\"\n      header=\"Withdraw\"\n      status={status}\n      body={show ? (\n      <>\n          <h3>Balance ${(balance? balance : \"?\")}</h3>\n          <br />\n        Withdraw Amount\n        <br />\n        \n        <Money\n          onChange={handleChange}\n          placeholder=\"Enter withdraw amount\"             \n        />\n                                   \n        <Click\n           text=\"Submit\"\n           disabled={disabled}\n           variant=\"primary\"\n           onClick={handleCreate}\n           className=\"btn btn-outline-light\"\n          />\n      </>\n):(\n    <>\n      <h3>Balance ${ctx.currentUser.balance.toFixed(2)}</h3>\n      <br />\n      <h6>Your account has been updated!</h6>\n      <Click\n        text=\"Start Another Transaction\"\n        className=\"btn btn-success\"\n        onClick={clearForm}\n      />\n    </>\n\n)}\n/>\n  )\n}\n\nexport default Withdraw;\n","import { NavLink, Icon } from \"./context\";\n\nfunction NavBar(){\n  return(\n    <>\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/\" data-toggle=\"tooltip\" title=\"Home\"><Icon /></a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/CreateAccount/\" data-toggle=\"tooltip\" title=\"Create Account\">Create Account</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/login/\" data-toggle=\"tooltip\" title=\"Login\">Login</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/deposit/\" data-toggle=\"tooltip\" title=\"Deposit\">Deposit</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/withdraw/\" data-toggle=\"tooltip\" title=\"Withdraw\">Withdraw</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/alldata/\" data-toggle=\"tooltip\" title=\"All Accounts\">All Accounts</NavLink>\n          </li>          \n        </ul>\n      </div>\n    </nav>\n    </>\n  );\n}\n\nexport default NavBar;","\n//import './App.css';\nimport AllData from './alldata'\nimport CreateAccount from './createaccount'\nimport Deposit from './deposit'\nimport Home from './home'\nimport Login from './login'\nimport Withdraw from './withdraw'\nimport NavBar from './navbar';\nimport {Route, HashRouter} from './context'\nimport {UserContext} from './context'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <NavBar/>\n      <UserContext.Provider value={{currentUser: null, users:[{name:'abel',email:'abel@mit.edu',password:'secret',balance:100, transactions: []}]}}>\n        <div className=\"fixed-container\" style={{padding: \"20px\"}}>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/CreateAccount/\" component={CreateAccount} />\n          <Route path=\"/login/\" component={Login} />\n          <Route path=\"/deposit/\" component={Deposit} />\n          <Route path=\"/withdraw/\" component={Withdraw} />\n          <Route path=\"/alldata/\" component={AllData} />\n        </div>\n      </UserContext.Provider>      \n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}